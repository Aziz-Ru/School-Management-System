generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


enum Rank{
  Vice_Principal
  Senior_Teacher
  Junior_Teacher
  Assistant_Teacher
  Office_Staff
}
enum Day{
  Saturday
  Sunday
  Monday
  Tuesday
  Wednesday
  Thursday
}

enum Meridiem{
  AM
  PM
}

enum Sex{
  Male
  Female
}


model admin {
  id       String @id @default(cuid())
  username String @unique
  password String
}

model schoolTable {
  id         String  @id @default(cuid())
  name       String
  email      String  @unique
  phone      String  @unique
  address    String
  message    String?
  schoolCode String
  EIIN       String
  imageURL   String?
}
model events{
  id        String   @id @default(cuid())
  title     String
  content   String
  date      String
  createdAt DateTime @default(now())
}

model annoucement {
  id        String   @id @default(cuid())
  title     String
  content   String
  date      String
  createdAt DateTime @default(now())
}

model classTable {
  id        String    @id  @default(cuid())
  classId   Int   @unique
  className String
  course    courseTable[]
  section   sectionTable[]
}

model sectionTable {
  id          String    @id @default(cuid()) @unique
  sectionName String    
  year        String
  classId     String
  classTable       classTable @relation(fields: [classId], references: [id], onDelete: Cascade)
  students     studentTable[]
  routineId     String ?
  routine    routineTable ?
  createdAt   DateTime  @default(now())
  @@unique([sectionName, classId,year])
}


model facultyTable {
  id          String       @id @default(cuid())
  facultyName String       @unique
  departments  departmentTable[]
}

model departmentTable {
  id        String     @id @default(cuid())
  departmentName  String     @unique
  facultyId String
  faculty   facultyTable    @relation(fields: [facultyId], references: [id])
  employees  employeeTable[]
  courses   courseTable[]
}

model courseTable {
  id         String     @id  @default(cuid())
  courseName String     
  totalMarks Int        @default(100)
  classId    String
  classRoom  classTable  @relation(fields: [classId], references: [id], onDelete: Cascade)
  departmentName  String    
  department departmentTable @relation(fields: [departmentName],references: [departmentName],onDelete: Cascade)
  hours     hourTable[]
  createdAt  DateTime   @default(now())
  @@unique([courseName, classId])
}

model employeeTable {
  id         String     @id @default(cuid())
  employeeId String     @unique
  password   String
  fullName  String
  rank       Rank      @default(Junior_Teacher)
  email      String
  phone      String
  sex        Sex       @default(Male)
  joinDate   String
  address     String
  message     String
  imageURL   String ?
  deptId     String ?
  department departmentTable ? @relation(fields: [deptId], references: [id],onDelete: Cascade)
  createdAt  DateTime   @default(now())
  
}

model studentTable {
  id        String   @id @default(cuid())
  studentId String   @unique
  password  String
  fullName  String
  phone     String
  sex       Sex @default(Male)
  dob       String
  imageURL  String ?
  sectionId String 
  section   sectionTable  @relation(fields: [sectionId], references: [id],onDelete: Cascade)
  createdAt DateTime @default(now())
  
}

model routineTable{
  id           String @id @default(cuid())
  sectionId   String @unique
  section   sectionTable @relation(fields: [sectionId],references: [id],onDelete: Cascade)
  days    dayTable[]
  
}
model dayTable{
  id           String @id @default(cuid())
  day          Day @default(Saturday)
  routineId     String
  routine     routineTable @relation(fields: [routineId],references: [id],onDelete: Cascade)
  hours     hourTable[]
}

model hourTable {
  id           String @id @default(cuid()) @unique
  startTime    String
  endTime      String
  dayId    String
  day      dayTable@relation(fields: [dayId],references: [id])
  courseId     String
  course       courseTable @relation(fields: [courseId], references: [id],onDelete: Cascade)
  createdAt    DateTime @default(now())
  @@unique([startTime,endTime,dayId,courseId])
   
}


model stackHolder {
  id        String  @id @default(cuid())
  fullName String
  phone     String
  message   String?
  rank      String
  imageURL  String
}











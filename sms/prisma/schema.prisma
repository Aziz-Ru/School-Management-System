generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model admin {
  id       String @id @default(cuid())
  username String @unique
  password String
}
model school {
  id         String  @id @default(cuid())
  name       String
  email      String  @unique
  phone      String  @unique
  address    String
  message    String?
  schoolCode String
  EIIN       String
  imageURL   String?
}

model classRoom {
  id        String    @id  @default(cuid())
  classId   Int   @unique
  className String
  course    course[]
  section   section[]
}
model section {
  id          String    @id @default(cuid())
  sectionName String    
  year        String
  classId     String
  routine     routine[]
  classRoom   classRoom @relation(fields: [classId], references: [id], onDelete: Cascade)
  student     student[]
  createdAt   DateTime  @default(now())
  @@unique([sectionName, classId,year])
}


model faculty {
  id          String       @id @default(cuid())
  facultyName String       @unique
  department  department[]
}

model department {
  id        String     @id @default(cuid())
  deptName  String     @unique
  facultyId String
  faculty   faculty    @relation(fields: [facultyId], references: [id])
  employee  employee[]
  courses   course[]
}

model course {
  id         String     @id  @default(cuid())
  courseName String     
  totalMarks Int        @default(100)
  classId    String
  classRoom  classRoom  @relation(fields: [classId], references: [id], onDelete: Cascade)
  deptName  String    
  department department @relation(fields: [deptName],references: [deptName],onDelete: Cascade)
  timeslot   timeslot[]
  createdAt  DateTime   @default(now())
  @@unique([courseName, classId])
}


model employee {
  id         String     @id @default(cuid())
  employeeId String     @unique
  password   String
  firstName  String
  lastName   String
  rank       String
  message    String?
  email      String
  phone      String
  sex        String
  joinDate   String
  imageURL   String?
  deptId     String
  createdAt  DateTime   @default(now())
  department department @relation(fields: [deptId], references: [id])
  timeslot   timeslot[]
  @@index([deptId], map: "employee_deptId_fkey")
}

model holder {
  id        String  @id @default(cuid())
  firstName String
  lastName  String
  phone     String
  message   String?
  rank      String
  imageURL  String
}

model notice {
  id        String   @id @default(cuid())
  title     String
  content   String
  date      String
  createdAt DateTime @default(now())
}


model student {
  id        String   @id @default(cuid())
  studentId String   @unique
  password  String
  firstName String
  lastName  String
  phone     String
  email     String
  sex       String
  dob       String
  imageURL  String?
  sectionId String
  createdAt DateTime @default(now())
  section   section  @relation(fields: [sectionId], references: [id])
  
}



model timeslot {
  id           String @id @default(cuid())
  startTime    String
  endTime      String
  meridiem     Meridiem   @default(AM)
  day          Day @default(SATURDAY)
  courseId     String
  course       course @relation(fields: [courseId], references: [id]) 
  employeeId   String
  employee     employee @relation(fields: [employeeId], references: [id])
  createdAt    DateTime @default(now())
  routineId    String 
  routine      routine @relation(fields: [routineId], references: [id])
  @@unique([startTime, endTime, day, courseId, employeeId])
}

model routine {
  id          String  @id @default(cuid())
  sectionName String
  section     section @relation(fields: [sectionName], references: [id])
  timeslot    timeslot[]
  
}

enum Day{
  SATURDAY
  SUNDAY
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
}

enum Meridiem{
  AM
  PM
}








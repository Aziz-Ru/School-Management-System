
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      =  env("DATABASE_URL")
}
// env("DATABASE_URL")
model School{
  id            String @id @unique
  name          String @unique
  address       String
  createdAt     DateTime @default(now())
}

model Teacher{
  id             String @id @default(uuid()) //Teacher ID
  email          String
  name           String // Teacher name
  password       String // Teacher Password
  imageLink      String ?
  qualification  String ? //Teacher Qualification
  bio            String ? //Teacher Bio
  dob            DateTime
  sex            String //Teacher date of birth
  address        String ? // Teacher Address
  phone          String  @db.VarChar(11)
  activeStatus   Boolean
  salary         Float @default(100000.0)
  joindAt        DateTime @default(now())
}

model Student{
  id            String @id @default(uuid())
  roll          String @unique
  name          String
  password      String
  dob           DateTime 
  sex           String
  address       String 
  imageLink     String ?
  phone         String @db.Char(11)
  classroom     EnrolledStudent @relation(fields: [classroomId],references: [id])
  classroomId   String
  attendence    Attendence[]
  
}

// first create class
model Classroom{
  id            String @id @default(uuid())   
  name          String @unique
  course        Course[]
  enrolled      EnrolledStudent []
  enrolledclassroomId String @unique
  monthlyFee    Float @default(2000.0)
}
model EnrolledStudent{
  id            String @id @default(uuid())
  students      Student[]
  classroom     Classroom @relation(fields: [className],references: [name])
  className   String 
  year          DateTime @db.Date @default(now())
}

// create course and connect with class
model Course{
  id            String @id 
  name          String 
  credit        Int @default(3)
  totalMarks    Int @default(100)
  class         Classroom @relation(fields: [classroomId],references: [name])
  classroomId   String
  exams         Exam[]
}
model Attendence{
  id            String @id @default(uuid())
  student       Student @relation(fields: [studentId],references: [id])
  studentId     String
  status        Boolean  @default(false)
  date          DateTime @default(now())
}

model Exam{
  id            String @id @default(uuid())
  description   String @db.Text
  name          String
  date          DateTime 
  course        Course @relation(fields: [courseId],references: [id])
  courseId      String
  subjectId     String
}

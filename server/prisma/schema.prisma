generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model admin {
  id       String @id @default(cuid())
  username String @unique
  password String
}

model school {
  id         String  @id @default(cuid())
  name       String
  email      String  @unique
  phone      String  @unique
  address    String
  message    String?
  schoolCode String
  EIIN       String
  imageURL   String?
}

model notice {
  id        String   @id @default(cuid())
  title     String
  content   String
  date      String
  createdAt DateTime @default(now())
}

model holder {
  id        String  @id @default(cuid())
  firstName String
  lastName  String
  phone     String
  message   String?
  rank      String
  imageURL  String
}

model employee {
  id         String     @id @default(cuid())
  employeeId String     @unique
  password   String
  firstName  String
  lastName   String
  rank       String
  message    String?
  email      String
  phone      String
  sex        String
  joinDate   String
  imageURL   String?
  deptId     String
  department department @relation(fields: [deptId], references: [id])
  createdAt  DateTime   @default(now())
}

model student {
  id        String   @id @default(cuid())
  studentId String   @unique
  password  String
  firstName String
  lastName  String
  phone     String
  email     String
  sex       String
  dob       String
  imageURL  String?
  sectionId String
  section   section  @relation(fields: [sectionId], references: [id])
  createdAt DateTime @default(now())
}

model faculty {
  id          String       @id @default(cuid())
  facultyName String       @unique
  department  department[]
}

model department {
  id        String     @id @default(cuid())
  deptName  String     @unique
  facultyId String
  faculty   faculty    @relation(fields: [facultyId], references: [id])
  employee  employee[]
}

model classRoom {
  id        String    @id @default(cuid())
  classId   Int       @unique
  className String
  courses   course[]
  sections  section[]
}

model course {
  id         String    @id @default(cuid())
  courseName String    @unique
  totalMarks Int       @default(100)
  classId    Int
  class      classRoom @relation(fields: [classId], references: [classId], onDelete: Cascade)
  timeslot    timeslot[]

  createdAt  DateTime  @default(now())
}

model section {
  id          String    @id @default(cuid())
  sectionName String    @unique
  year        String
  classId     Int
  class       classRoom @relation(fields: [classId], references: [classId], onDelete: Cascade)
  student     student[]
  routine     routine[]
}

model day {
  id      String     @id @default(cuid())
  dayName String     @unique
  time    timeslot[]
  routine routine[]
}
model hour{
  id      String     @id @default(cuid())
  period  String    @unique
  abbreviation String
  time    timeslot[]
}

model timeslot {
  id           String @id @default(cuid())
  dayName      String
  day          day    @relation(fields: [dayName], references: [dayName])
  periodString  String
  period       hour @relation(fields: [periodString],references: [period])
  courseName    String
  course        course @relation(fields: [courseName],references: [courseName])
  
  @@unique([dayName,courseName,periodString])
}

model routine {
  id          String  @id @default(cuid())
  sectionName String
  section     section @relation(fields: [sectionName], references: [sectionName])
  day         day[]
  year        String
}
